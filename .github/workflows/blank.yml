name: Deploy UPM Package

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Auto-detect package.json and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Find package.json and extract version
        id: extract_version
        run: |
          MATCH_FILE=$(find . -type f -name package.json -exec grep -l '"name": "com.undercat.firebase.remote-config"' {} \;)

          if [ -z "$MATCH_FILE" ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y package.json ph√π h·ª£p!"
            exit 1
          fi

          VERSION=$(jq -r .version "$MATCH_FILE")
          echo "MATCH_FILE=$MATCH_FILE" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "‚úÖ Found package.json at $MATCH_FILE"
          echo "üî¢ Version: $VERSION"

      - name: Check if tag already exists
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/$VERSION"; then
            echo "‚ùå Tag $VERSION already exists. Skipping deploy."
            exit 0
          fi

      - name: Temporarily move .github out to allow subtree split
        run: |
          mv .github ../temp_github || true

      - name: Deploy UPM package
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          set -ex

          SEMVER="$VERSION"
          PREFIX="."  # v√¨ package.json n·∫±m ·ªü th∆∞ m·ª•c g·ªëc
          BRANCH="upm"

          # T√°ch subtree v√† t·∫°o nh√°nh
          git subtree split --prefix="$PREFIX" --branch "$BRANCH"

          # G·∫Øn tag v√†o nh√°nh ƒë√≥
          git tag "$SEMVER" "$BRANCH"

          # C·∫•u h√¨nh remote ƒë·ªÉ s·ª≠ d·ª•ng token
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

          # Push tag duy nh·∫•t
          git push origin "$SEMVER"

          # Xo√° nh√°nh t·∫°m
          git branch -D "$BRANCH"

      - name: Restore .github folder
        run: |
          mv ../temp_github .github || true
